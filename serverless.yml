service: haargos-serverless
frameworkVersion: '3'

plugins:
  - serverless-domain-manager
  - serverless-plugin-typescript
custom:
  customDomain:
    domainName: ${env:HAARGOS_API_DOMAIN}
    basePath: ''
    stage: '$default'
    createRoute53Record: true
    endpointType: regional
    apiType: http
  addonsTableName: 'addons-table-${sls:stage}'
  configurationTableName: 'configuration-table-${sls:stage}'
  contactTableName: 'contact-table-${sls:stage}'
  dnsVerificationTableName: 'dns-verification-table-${sls:stage}'
  installationTableName: 'installations-table-${sls:stage}'
  logsDataTableName: 'log-table-${sls:stage}'
  notificationsTableName: 'notification-table-${sls:stage}'
  observationDataTableName: 'observations-table-${sls:stage}'
  osTableName: 'os-table-${sls:stage}'
  subTableName: 'sub-table-${sls:stage}'
  supervisorTableName: 'supervisor-table-${sls:stage}'
  userTableName: 'user-table-${sls:stage}'
  crypto:
    key: ${env:CRYPTO_KEY}
  auth0:
    issuerBaseUrl: ${env:AUTH0_ISSUER_BASE_URL}
    audience: ${env:AUTH0_AUDIENCE}
    domain: ${env:AUTH0_DOMAIN}
    clientId: ${env:AUTH0_CLIENT_ID}
  maxObservationsKept: 10
  returnObservationCount: 10

provider:
  name: aws
  runtime: nodejs18.x
  httpApi:
    cors: true
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [UserTable, Arn]
        - Effect: Allow
          Action:
            - dynamodb:UpdateItem
            - dynamodb:GetItem
          Resource:
            - Fn::GetAtt: [ConfigurationTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
          Resource:
            - arn:aws:dynamodb:*:*:table/${self:custom.addonsTableName}/index/*
            - arn:aws:dynamodb:*:*:table/${self:custom.logsDataTableName}/index/*
            - arn:aws:dynamodb:*:*:table/${self:custom.observationDataTableName}/index/*
            - arn:aws:dynamodb:*:*:table/${self:custom.osTableName}/index/*
            - arn:aws:dynamodb:*:*:table/${self:custom.notificationsTableName}/index/*
            - arn:aws:dynamodb:*:*:table/${self:custom.supervisorTableName}/index/*
            - arn:aws:dynamodb:*:*:table/${self:custom.userTableName}/index/*

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            # - dynamodb:UpdateItem
            - dynamodb:BatchWriteItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [ObservationTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [InstallationTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:PutItem
          Resource:
            - Fn::GetAtt: [ContactTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:UpdateItem
          Resource:
            - Fn::GetAtt: [SubTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
          Resource:
            - Fn::GetAtt: [LogTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt: [NotificationTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt: [OsTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt: [SupervisorTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:PutItem
            - dynamodb:BatchWriteItem
          Resource:
            - Fn::GetAtt: [AddonTable, Arn]

        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource:
            - Fn::GetAtt: [DnsVerificationTable, Arn]
  environment:
    # Tables
    ADDON_TABLE: ${self:custom.addonsTableName}
    CONFIGURATION_TABLE: ${self:custom.configurationTableName}
    CONTACT_TABLE: ${self:custom.contactTableName}
    DNS_VERIFICATION_TABLE: ${self:custom.dnsVerificationTableName}
    INSTALLATION_TABLE: ${self:custom.installationTableName}
    LOGS_TABLE: ${self:custom.logsDataTableName}
    NOTIFICATION_TABLE: ${self:custom.notificationsTableName}
    OBSERVATION_TABLE: ${self:custom.observationDataTableName}
    OS_TABLE: ${self:custom.osTableName}
    SUB_TABLE: ${self:custom.subTableName}
    SUPERVISOR_TABLE: ${self:custom.supervisorTableName}
    USERS_TABLE: ${self:custom.userTableName}

    # Auth0
    AUTH0_ISSUER_BASE_URL: ${self:custom.auth0.issuerBaseUrl}
    AUTH0_AUDIENCE: ${self:custom.auth0.audience}
    AUTH0_DOMAIN: ${self:custom.auth0.domain}
    AUTH0_CLIENT_ID: ${self:custom.auth0.clientId}

    # Crypto
    CRYPTO_KEY: ${self:custom.crypto.key}

    # Settings
    MAX_OBSERVATIONS_KEPT: ${self:custom.maxObservationsKept}
    RETURN_OBSERVATION_COUNT: ${self:custom.returnObservationCount}

    # Misc
    SLS_STAGE: ${sls:stage}

functions:
  api:
    handler: index.handler
    events:
      - httpApi: '*'

  automation:
    handler: jobs/automation.handler
    events:
      - schedule:
          rate: rate(4 hours)
          enabled: true

  dns_verifier:
    handler: jobs/dns_verifier.handler
    events:
      - schedule:
          rate: rate(5 minutes)
          enabled: true

resources:
  Resources:
    AddonTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.addonsTableName}
        AttributeDefinitions:
          - AttributeName: installation_id
            AttributeType: S
          - AttributeName: slug
            AttributeType: S
        KeySchema:
          - AttributeName: installation_id
            KeyType: HASH
          - AttributeName: slug
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: installationId-index
            KeySchema:
              - AttributeName: installation_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    DnsVerificationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.dnsVerificationTableName}
        AttributeDefinitions:
          - AttributeName: installation_id
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: installation_id
            KeyType: HASH
          - AttributeName: type
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    ContactTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.contactTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL

    ConfigurationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.configurationTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    InstallationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.installationTableName}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: id
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    LogTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.logsDataTableName}
        AttributeDefinitions:
          - AttributeName: installation_id
            AttributeType: S
          - AttributeName: type
            AttributeType: S
        KeySchema:
          - AttributeName: installation_id
            KeyType: HASH
          - AttributeName: type
            KeyType: RANGE
        BillingMode: PAY_PER_REQUEST

    NotificationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.notificationsTableName}
        AttributeDefinitions:
          - AttributeName: installation_id
            AttributeType: S
          - AttributeName: created_at
            AttributeType: S
        KeySchema:
          - AttributeName: installation_id
            KeyType: HASH
          - AttributeName: created_at
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: installationId-index
            KeySchema:
              - AttributeName: installation_id
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    ObservationTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.observationDataTableName}
        AttributeDefinitions:
          - AttributeName: timestamp
            AttributeType: S
          - AttributeName: userId
            AttributeType: S
          - AttributeName: installation_id
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: timestamp
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: userId-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
            Projection:
              ProjectionType: ALL
          - IndexName: userId-installation_id-index
            KeySchema:
              - AttributeName: userId
                KeyType: HASH
              - AttributeName: installation_id
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST

    OsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.osTableName}
        AttributeDefinitions:
          - AttributeName: installation_id
            AttributeType: S
        KeySchema:
          - AttributeName: installation_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    SubTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.subTableName}
        AttributeDefinitions:
          - AttributeName: sub
            AttributeType: S
        KeySchema:
          - AttributeName: sub
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    SupervisorTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.supervisorTableName}
        AttributeDefinitions:
          - AttributeName: installation_id
            AttributeType: S
        KeySchema:
          - AttributeName: installation_id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST

    UserTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          - AttributeName: userId
            AttributeType: S
          - AttributeName: secret
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: userId
            KeyType: HASH
          - AttributeName: secret
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
        TableName: ${self:custom.userTableName}
